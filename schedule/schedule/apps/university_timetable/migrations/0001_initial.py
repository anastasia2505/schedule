# Generated by Django 3.0.3 on 2020-05-08 05:44

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import university_timetable.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicPlan',
            fields=[
                ('id', models.AutoField(db_column='Код академического плана', primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Академический план',
                'verbose_name_plural': 'Академические планы',
            },
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('NumberOfBuilding', models.IntegerField(db_column='Номер корпуса', primary_key=True, serialize=False)),
                ('Address', models.CharField(db_column='Адрес корпуса', max_length=30)),
            ],
            options={
                'verbose_name': 'Корпус',
                'verbose_name_plural': 'Корпуса',
            },
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('TypeOfWeek', models.CharField(choices=[('нч', 'нечетная'), ('чн', 'четная')], max_length=2)),
                ('DayOfWeek', models.CharField(choices=[('вт', 'Вторник'), ('пон', 'Понедельник'), ('суб', 'Суббота'), ('ср', 'Среда'), ('пят', 'Пятница'), ('чет', 'Четверг'), ('вос', 'Воскресенье')], max_length=11)),
            ],
            options={
                'verbose_name': 'Календарь',
                'verbose_name_plural': 'Календари',
            },
        ),
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('Id', models.AutoField(db_column='Код дисциплины', primary_key=True, serialize=False, verbose_name='Код дисциплины')),
                ('Name', models.CharField(db_column='Название дисциплины', max_length=60, verbose_name='Название дисциплины')),
                ('AcademicHours', models.IntegerField(db_column='Количество академических часов', default=0, verbose_name='Количество академических часов')),
                ('IntermediateCertificationForm', models.CharField(choices=[('з', 'зачет'), ('зо', 'зачет с оценкой'), ('экз', 'экзамен')], db_column='Форма промежуточной аттестации', default='', max_length=20, verbose_name='Форма промежуточной аттестации')),
            ],
            options={
                'verbose_name': 'Дисциплина',
                'verbose_name_plural': 'Дисциплины',
            },
        ),
        migrations.CreateModel(
            name='LectureRoom',
            fields=[
                ('LectureRoomNumber', models.IntegerField(db_column='Номер аудитории', primary_key=True, serialize=False)),
                ('Capacity', models.IntegerField(db_column='Вместимость аудитории')),
                ('NumberOfBuilding', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lecturerooms', to='university_timetable.Building')),
            ],
            options={
                'verbose_name': 'Аудитория',
                'verbose_name_plural': 'Аудитории',
            },
        ),
        migrations.CreateModel(
            name='Pair',
            fields=[
                ('PairNumber', models.AutoField(db_column='Номер пары', help_text='help_text', primary_key=True, serialize=False)),
                ('PairStart', models.TimeField(db_column='Время начала пары')),
                ('PairStop', models.TimeField(db_column='Время окончания пары')),
            ],
            options={
                'verbose_name': 'Пара',
                'verbose_name_plural': 'Пары',
            },
        ),
        migrations.CreateModel(
            name='GroupInInstitute',
            fields=[
                ('Id', models.AutoField(default=1, primary_key=True, serialize=False, verbose_name='Код группы')),
                ('GroupName', models.CharField(max_length=15)),
                ('NumberOfPeople', models.IntegerField(db_column='Количество человек в группе')),
                ('Institute', models.CharField(db_column='Институт', max_length=60)),
                ('Specialty', models.CharField(db_column='Специальность', max_length=60)),
                ('FormOfTraining', models.CharField(choices=[('з', 'заочная'), ('оз', 'очно-заочная'), ('о', 'очная')], db_column='Форма обучения', max_length=12)),
                ('SemesterNumber', models.IntegerField(db_column='Номер семестра')),
                ('CourseNumber', models.IntegerField(db_column='Номер курса')),
                ('calendars', models.ManyToManyField(related_name='groups', to='university_timetable.Calendar')),
                ('disciplines', models.ManyToManyField(related_name='groups', to='university_timetable.Discipline')),
                ('lecturerooms', models.ManyToManyField(related_name='groups', to='university_timetable.LectureRoom')),
                ('pairs', models.ManyToManyField(related_name='groups', to='university_timetable.Pair')),
                ('plane', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='university_timetable.AcademicPlan')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
            },
        ),
        migrations.AddField(
            model_name='academicplan',
            name='disciplines',
            field=models.ManyToManyField(related_name='academicplan', to='university_timetable.Discipline'),
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('PersonnelNumber', models.AutoField(db_column='Табельный номер сотрудника', help_text='Табельный номер сотрудника - уникальное значение', primary_key=True, serialize=False, unique=True)),
                ('FirstName', models.CharField(db_column='Имя преподавателя', max_length=20, validators=[university_timetable.models.validate_string])),
                ('Patronymic', models.CharField(db_column='Отчество', max_length=20, validators=[university_timetable.models.validate_string])),
                ('LastName', models.CharField(db_column='Фамилия преподавателя', max_length=20, validators=[university_timetable.models.validate_string])),
                ('TeacherPosition', models.CharField(db_column='Должность преподавателя', max_length=20, validators=[university_timetable.models.validate_string])),
                ('PhoneNumber', models.CharField(db_column='Номер телефона', max_length=11, unique=True)),
                ('Email', models.CharField(db_column='email', default='defaultemail@mail.ru', max_length=30, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('Department', models.CharField(db_column='Кафедра', max_length=50, validators=[university_timetable.models.validate_string])),
                ('calendars', models.ManyToManyField(related_name='teachers', to='university_timetable.Calendar')),
                ('disciplines', models.ManyToManyField(related_name='teachers', to='university_timetable.Discipline')),
                ('groups', models.ManyToManyField(related_name='teachers', to='university_timetable.GroupInInstitute')),
                ('lecturerooms', models.ManyToManyField(related_name='teachers', to='university_timetable.LectureRoom')),
                ('pairs', models.ManyToManyField(related_name='teachers', to='university_timetable.Pair')),
            ],
            options={
                'verbose_name': 'Преподаватель',
                'verbose_name_plural': 'Преподаватели',
                'unique_together': {('FirstName', 'Patronymic', 'LastName', 'PhoneNumber')},
            },
        ),
    ]
